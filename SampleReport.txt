---------------------Reading the Data from File-------------------------------------------------
------------------------Reading file from csv-----------------------------------------------

C:\ProgramData\Anaconda3\lib\site-packages\IPython\core\interactiveshell.py:3326: DtypeWarning: Columns (4,6,31,33,61,62,63,76,79,90,92,94,96,114,115,121) have mixed types. Specify dtype option on import or set low_memory=False.
  exec(code_obj, self.user_global_ns, self.user_ns)

-----------------------Finished Reading the File-------------------------------------------
---------------------Explorartory Data Analysis-------------------------------------------------
---------------------Exploratory Data Analysis------------------------------------------------
type of df  <class 'pandas.core.frame.DataFrame'>
shape and size of df  (181691, 135) 24528285
---------------------Finished EDA----------------------------------------------------------------
---------------------Reducing the data based for top 10 gnames only-----------------------------
--------------------------- Exploring Target -----------------------------------------
--------------------------- Reduction of Data ----------------------------------------
82782
(98909, 135)
--------------------------Shape before Reduction ---------------------
(98909, 135)
--------------------------Shape after Reduction ---------------------
(36943, 135)
39         New People's Army (NPA)
169        New People's Army (NPA)
364    Irish Republican Army (IRA)
365    Irish Republican Army (IRA)
366    Irish Republican Army (IRA)
Name: gname, dtype: object
<class 'pandas.core.frame.DataFrame'>
---------------------Removing and Imputing Missing Values---------------------------------------
<class 'tuple'>
Dropping Columns which don't have atleast 20,000 non nan values
Imputing the rest of the nan values
---------------------Encoding Target----------------------------------------------------------- 
---------------- converting categorical target to numerical data-------------------
 df['gname'].unique().shape  (10,)
        eventid iyear imonth iday extended country     country_txt region  \
0  197001310001  1970      1   31        0     160     Philippines      5   
1  197004020001  1970      4    2        0     160     Philippines      5   
2  197006260001  1970      6   26        0     603  United Kingdom      8   
3  197006270001  1970      6   27        0     603  United Kingdom      8   
4  197006270002  1970      6   27        0     603  United Kingdom      8   

       region_txt         provstate  ... nwoundte property ishostkid  \
0  Southeast Asia            Tarlac  ...        0        0         0   
1  Southeast Asia          Pampanga  ...        0        0         0   
2  Western Europe  Northern Ireland  ...        0        1         0   
3  Western Europe  Northern Ireland  ...        0        0         0   
4  Western Europe  Northern Ireland  ...        0        0         0   

                                                                               scite1  \
0  "ISIS detonates 5 empty homes in Daur using IEDs," Iraqi News, September 28, 2016.   
1  "ISIS detonates 5 empty homes in Daur using IEDs," Iraqi News, September 28, 2016.   
2  "ISIS detonates 5 empty homes in Daur using IEDs," Iraqi News, September 28, 2016.   
3  "ISIS detonates 5 empty homes in Daur using IEDs," Iraqi News, September 28, 2016.   
4  "ISIS detonates 5 empty homes in Daur using IEDs," Iraqi News, September 28, 2016.   

  dbsource INT_LOG INT_IDEO INT_MISC INT_ANY gnameEncoded  
0     PGIS       0        1        1       1            6  
1     PGIS       0        1        1       1            6  
2     CAIN       0        0        1       1            3  
3     CAIN       0        0        1       1            3  
4     CAIN       0        0        1       1            3  

[5 rows x 57 columns]
---------------------Feature Selection by Exploration of Data---------------------------------- 
---------------------Splitting Data into train and test --------------------------------------- 
(29554, 13) (29554,)
(7389, 13) (7389,)
---------------------Check Imbalance ---------------------------------------------------------- 
---------------------Check and process outliers ----------------------------------------------- 

C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\label.py:235: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

---------------------Scaling of Features data ------------------------------------------------- 
--------------------Other Feature Selection Techniques ---------------------------------------- 
-------------------------Dimensionality Reduction-------------------------------------
Explained Variance is:  0.9999953491636949
---------Modelling, Hyper Parameter Optimization, Cross Fold, Grid Search, Ensemble------------ 
Accuracy  RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=80, max_features=3, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=3, min_samples_split=10,
                       min_weight_fraction_leaf=0.0, n_estimators=1000,
                       n_jobs=None, oob_score=False, random_state=None,
                       verbose=0, warm_start=False) 0.9967519285424279
Confusion matrix:n [[ 679    0    0    0    0    0    0    0    0    0]
 [   1  463    0    0    0    0    0    0    0    0]
 [   0    0  683    0    0    0    0    0    0    0]
 [   0    0    0  518    0    1    0    0    0    0]
 [   0    1    0    0 1081    8    5    0    0    0]
 [   0    0    0    0    2  488    0    0    0    0]
 [   0    0    0    0    0    0  528    0    0    1]
 [   0    0    0    0    0    0    0  484    3    0]
 [   0    0    0    0    0    0    0    1  913    0]
 [   0    0    0    0    0    1    0    0    0 1528]]
f1score is 0.9967519285424279
class_report is               precision    recall  f1-score   support

           0       1.00      1.00      1.00       679
           1       1.00      1.00      1.00       464
           2       1.00      1.00      1.00       683
           3       1.00      1.00      1.00       519
           4       1.00      0.99      0.99      1095
           5       0.98      1.00      0.99       490
           6       0.99      1.00      0.99       529
           7       1.00      0.99      1.00       487
           8       1.00      1.00      1.00       914
           9       1.00      1.00      1.00      1529

    accuracy                           1.00      7389
   macro avg       1.00      1.00      1.00      7389
weighted avg       1.00      1.00      1.00      7389

Model Performance
Average Error: 0.0050 degrees.
Accuracy = 99.87%.
best_grid RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=80, max_features=3, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=3, min_samples_split=10,
                       min_weight_fraction_leaf=0.0, n_estimators=1000,
                       n_jobs=None, oob_score=False, random_state=None,
                       verbose=0, warm_start=False)
grid_accuracy 99.8686336432238
